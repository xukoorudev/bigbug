import type { Metadata } from "next";
import { Inter as FontSans } from "next/font/google";
import "./globals.css";
import Image from "next/image";

import {
  RegisterLink,
  LoginLink,
  LogoutLink,
} from "@kinde-oss/kinde-auth-nextjs/components";
import { getKindeServerSession } from "@kinde-oss/kinde-auth-nextjs/server";

import { cn } from "@/lib/utils"
import { Button } from "@/components/ui/button";
import { ModalProvider } from "@/providers/modal-provider";
 
const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const { isAuthenticated, getUser } = getKindeServerSession();
  const user = await getUser();
  return (
    <html lang="en">
      <body
        className={cn(
          "min-h-screen bg-background font-sans antialiased",
          fontSans.variable
        )}
      >
        <header>
          <nav className=" flex items-center justify-between shadow-sm px-2 md:px-8 h-12 bg-slate-100 border-b-2 border">
            <h1 className="text-display-3">KindeAuth</h1>
            <div className="space-x-3">
              {!(await isAuthenticated()) ? (
                <>
                  <Button size="sm" variant="ghost" asChild>
                    <LoginLink >
                      Sign in
                    </LoginLink>
                  </Button>
                  <Button size="sm" className="bg-blue-500 " asChild>
                    <RegisterLink >Sign up</RegisterLink>
                  </Button>
                </>
              ) : (
                <div className="profile-blob flex items-center space-x-4">
                  {user?.picture ? (
                   
                    <Image 
                    className="avatar rounded-full"
                    src={user?.picture}
                    alt="user profile avatar"
                    referrerPolicy="no-referrer"
                    width={30}
                    height={30}
                    />
                  ) : (
                    <div className="avatar">
                      {user?.given_name?.[0]}
                      {user?.family_name?.[0]}
                    </div>
                  )}
                  <div>
                    <p className="text-heading-2">
                      {user?.email}
                    </p>

                  </div>
                    <Button size="sm" className="bg-blue-500 hover:bg-blue-600" asChild>
                    <LogoutLink >Log out</LogoutLink>
                    </Button>
                </div>
              )}
            </div>
          </nav>
        </header>
        <main>
          <ModalProvider />
          {children}
        </main>
      </body>
    </html>
  );
}
